name: Build and Test Jolt

on:
  push:
    branches: [main]
  pull_request:
    branches: ["**", main]

env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: cargo fmt
        run: cargo fmt --all --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: cargo clippy
        run: cargo clippy --all

  machete:
    runs-on: ubuntu-latest
    steps:
      - uses: bnjbvr/cargo-machete@main
      - name: cargo machete
        run: cargo machete --with-metadata

  build-wasm:
    name: Build Wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Build Wasm
        working-directory: ./jolt-core
        run: cargo build --release --target wasm32-unknown-unknown

  test-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Cache Jolt RISC-V Rust toolchain
        uses: actions/cache@v4
        with:
          key: jolt-rust-toolchain-${{hashFiles('guest-toolchain-tag')}}
          path: ~/.jolt
      - name: Install Jolt RISC-V Rust toolchain
        run: cargo run install-toolchain
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Run jolt-core tests
        run: cargo nextest run --release -p jolt-core

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.30.0
        with:
          files: .

  test-sdk:
    name: jolt binary check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build the `jolt` binary
        run: cargo build --release --bin jolt

      - name: Use the `jolt` binary to generate code
        run: ./target/release/jolt new sample_project

      - name: Make sure the generated code runs
        working-directory: ./sample_project
        run: cargo run --release

  test-verifier:
    name: Jolt Verifier Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install Jolt RISC-V Rust toolchain
        run: cargo run install-toolchain
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Run verifier tests
        run: cargo nextest run --release -p jolt-verifier

  test-tracer:
    name: Jolt Tracer Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install Jolt RISC-V Rust toolchain
        run: cargo run install-toolchain
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Run tracer tests
        run: cargo nextest run --release -p tracer

  # zklean-extractor-tests:
  #   name: ZkLean extractor tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run extractor tests
  #       working-directory: ./zklean-extractor
  #       run: cargo test

  # compile-extracted-lean:
  #   name: Compile extracted Lean
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Extract Jolt ZkLean package
  #       working-directory: ./zklean-extractor
  #       run: cargo run --release -- -o -p jolt-zklean
  #
  #     - name: Run lake build on the extracted model
  #       uses: leanprover/lean-action@v1
  #       with:
  #         lake-package-directory: ./zklean-extractor/jolt-zklean/src
  #         build: true
